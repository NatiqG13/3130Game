package flappybird;
import java.awt.*;
import javax.swing.JPanel;
import javax.swing.JFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.awt.geom.AffineTransform;


public class FlappyBird implements ActionListener, KeyListener {

    public static final int FPS = 60;
    public static final int WIDTH = 640;
    public static final int HEIGHT = 700;

    private seaHorse fish;
    private JFrame myFrame;
    private JPanel panel;
    private Timer t;
    private ArrayList<Rectangle> rect;
    private int time;
    private int scroll;

    private boolean over;

    public void jFrame() {
        myFrame = new JFrame("Flappy Fish");
        fish = new seaHorse();
        rect = new ArrayList<Rectangle>();
        panel = new Games(this, fish, rect);
        myFrame.add(panel);

        myFrame.setSize(WIDTH, HEIGHT);
        myFrame.setVisible(true);
        myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        myFrame.addKeyListener(this);
        over = true;

        t = new Timer(1000/FPS, this);
        t.start();
    }


    @Override
    public void actionPerformed(ActionEvent e) {
        panel.repaint();
        if(!over) {
            fish.movement();
            if(scroll % 90 == 0) {
                Rectangle r = new Rectangle(WIDTH, 0, Games.pipeWidth, (int) ((Math.random()*HEIGHT)/5f + (0.2f)*HEIGHT));
                int h2 = (int) ((Math.random()*HEIGHT)/5f + (0.2f)*HEIGHT);
                Rectangle r2 = new Rectangle(WIDTH, HEIGHT - h2, Games.pipeWidth, h2);
                rect.add(r);
                rect.add(r2);
            }
            ArrayList<Rectangle> toRemove = new ArrayList<Rectangle>();
            boolean game = true;
            for(Rectangle r : rect) {
                r.x-=3;
                if(r.x + r.width <= 0) {
                    toRemove.add(r);
                }
                if(r.contains(fish.fishWidth, fish.fishHeight)) {
                    JOptionPane.showMessageDialog(myFrame, "You lose!\n"+"Your score was: "+time+".");
                    game = false;
                }
            }
            rect.removeAll(toRemove);
            time++;
            scroll++;

            if(fish.fishHeight > HEIGHT || fish.fishHeight+fish.RAD < 0) {
                game = false;
            }

            if(!game) {
                rect.clear();
                fish.reset();
                time = 0;
                scroll = 0;
                over = true;
            }
        }
        else {

        }
    }

    public int getScore() {
        return time;
    }

    
    public boolean over() {
        return over;
    }
     class Games extends JPanel {

        public static final int pipeWidth = 50, pipeHeight = 30;
        private Image pipeHead, pipeLength;
        private seaHorse bird;
        private ArrayList<Rectangle> rect;
        private flappybird.FlappyBird fb;

        private Font scoreFont, homeScreen;
        public final Color bg = new Color(0, 158, 158);


        public Games(FlappyBird fb, seaHorse bird, ArrayList<Rectangle> rect) {
            this.fb = fb;
            this.bird = bird;
            this.rect = rect;
            scoreFont = new Font("Arial", Font.BOLD, 18);
            homeScreen = new Font("Arial", Font.BOLD, 48);

            try {
                pipeHead = ImageIO.read(new File("C:\\Users\\natiq\\Desktop\\bird.java\\src\\flappybird\\bluet.png"));
                pipeLength = ImageIO.read(new File("C:\\Users\\natiq\\Desktop\\bird.java\\src\\flappybird\\bluepipes.png"));

            }
            catch(IOException e) {
                e.printStackTrace();
            }
        }
        @Override
        public void paintComponent(Graphics g) {

            g.setColor(bg);
            g.fillRect(0,0, flappybird.FlappyBird.WIDTH, flappybird.FlappyBird.HEIGHT);
            bird.update(g);
            g.setColor(Color.red);
            for(Rectangle r : rect) {
                Graphics2D g2d = (Graphics2D) g;
                g2d.setColor(Color.green);

                AffineTransform old = g2d.getTransform();
                g2d.translate(r.x+pipeWidth/2, r.y+pipeHeight/2);
                if(r.y < flappybird.FlappyBird.HEIGHT/2) {
                    g2d.translate(0, r.height);
                    g2d.rotate(Math.PI);
                }
                g2d.drawImage(pipeHead, -pipeWidth/2, -pipeHeight/2, Games.pipeWidth, Games.pipeHeight, null);
                g2d.drawImage(pipeLength, -pipeWidth/2, pipeHeight/2, Games.pipeWidth, r.height, null);
                g2d.setTransform(old);
            }
            g.setFont(scoreFont);
            g.setColor(Color.white);
            g.drawString("Score: "+fb.getScore(), 250, 20);

            if(fb.over()) {
                g.setFont(homeScreen);
                g.setColor(new Color(0, 0, 0,170));
                g.drawString("  Start", flappybird.FlappyBird.WIDTH/2-100, flappybird.FlappyBird.HEIGHT/2-100);
                g.drawString("Hit Spacebar to Start!", flappybird.FlappyBird.WIDTH/2-300, flappybird.FlappyBird.HEIGHT/2+50);
            }
        }
    }
   class seaHorse {
        public float fishWidth, fishHeight, vx, vy;
        public static final int RAD = 25;
        private Image img;
        public seaHorse() {
            fishWidth = flappybird.FlappyBird.WIDTH/2;
            fishHeight = flappybird.FlappyBird.HEIGHT/2;
            try {
                img = ImageIO.read(new File("C:\\Users\\natiq\\Desktop\\bird.java\\src\\flappybird\\seahorse.png"));
            }
            catch(IOException e) {
                e.printStackTrace();
            }
        }
        public void movement() {
            fishWidth+=vx;
            fishHeight+=vy;
            vy+=0.5f;
        }
        public void update(Graphics g) {
            g.setColor(Color.black);
            g.drawImage(img, Math.round(fishWidth-RAD),Math.round(fishHeight-RAD),2*RAD,2*RAD, null);
        }
        public void jump() {
            vy = -8;
        }

        public void reset() {
            fishWidth = 640/2;
            fishHeight = 640/2;
            vx = vy = 0;
        }
    }
    public static void main(String[] args) {

        new FlappyBird().jFrame();
    }


    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode()==KeyEvent.VK_W) {
            fish.jump();
        }
        else if(e.getKeyCode()==KeyEvent.VK_SPACE) {
            over = false;
        }
    }
    public void keyReleased(KeyEvent e) {

    }
    public void keyTyped(KeyEvent e) {

    }


